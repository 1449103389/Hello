                                    第三章  Java语言中的数据与运算符
3.1 Java中数制的表现形式
*   二进制：由两个数字组成：“0”和“1”
*   八进制：有一个0的前缀，经常会与二进制产生混淆，建议在Java程序设计中，尽量不要使用八进制
*   十六进制：有一个0x前缀
*   十进制：运算时逢十进一

3.2 数据类型
    Java中的数据类型包括基本数据类型和对象类型
    Java程序中，总共有8大基本类型，其中4种整型，1种字符型，2种浮点型，1种布尔型，除了这几种
基本类型外，其他都属于对象类型的数据
      基本类型              范围              大小（字节）
    byte（字节型）      -128 ~ 127             1
    short(短整型)     -32768 ~ 32767           2
    int(整数型)  -2147483648 ~ 2147483647      4
    long(长整型)          xx ~ xx              8   （注：长整型数据后面有一个"L"字母）
    
    char(字符型)            /                  2
    
    float(单精度浮点型)      /                  4   （注：有效数字最长为7位，每个单精度浮
                                                     点型数据后面都有一个标志性符号"F"或
                                                     "f"；如果一个浮点数后面加上"F"或"f"，
                                                     代表的就是单精度浮点型数据，否则，系
                                                     统会认为是双精度浮点型数据）
    double(双精度浮点型)     /                  8    （注：有效数字最长为15位，后面带有标志
                                                      符号"D"或"d"，系统默认不带标志性符号
                                                      的浮点型数据是双精度浮点型数据）
 
    boolean(布尔型)     true或false            ??
    
3.6 运算符
    当使用运算符（注意没说只有算数运算符，说明是所有运算符都成立）把两个操作数结合到一起时，首先会将两个操作数转化成相同类型的数据：
*   两个操作数中如有一个是double型，那么另一个操作数一定先转化成double型，再进行运算
*   两个操作数中如有一个是float型，那么另一个操作数一定先转化成float型，再进行运算
*   两个操作数中如有一个是long型，那么另一个操作数一定先转化成long型，再进行运算
*   其他任何两个基本类型数据操作，两个操作数都会自动转化成int型

    3.6.5 移位运算符
        移位运算符也针对二进制的“位”，它主要包括左移位运算符(<<)，右移位运算符(>>>)，带符号的右移位运算符(>>)，
    所谓带符号，是指如果是正数，在高位补0，如果是负数，则在高位补1
